apiVersion: v1
kind: Service
metadata:
  name: kafka-svc
  labels:
    app: kafka-app
spec:
  clusterIP: None
  ports:
    - name: 'PLAINTEXT'
      protocol: TCP
      port: 9092
      targetPort: 9092
  selector:
    app: kafka-app
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: kafka
  labels:
    app: kafka-app
spec:
  serviceName: kafka-svc
  selector:
    matchLabels:
      app: kafka-app
  template:
    metadata:
      labels:
        app: kafka-app
    spec:
      containers:
        - name: kafka-container
          image: docker.io/bitnami/kafka:3.6
          ports:
            - containerPort: 9092
            - containerPort: 9093
          env:
            - name: KAFKA_ENABLE_KRAFT
              value: 'yes'
            - name: KAFKA_CFG_NODE_ID
              value: '1'
            - name: KAFKA_CFG_PROCESS_ROLES
              value: 'broker,controller'
            - name: KAFKA_CFG_CONTROLLER_LISTENER_NAMES
              value: 'CONTROLLER'
            - name: KAFKA_CFG_LISTENERS
              value: 'PLAINTEXT://:9092,CONTROLLER://:9093'
            - name: KAFKA_INTER_BROKER_LISTENER_NAME
              value: 'PLAINTEXT'
            - name: KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP
              value: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT'
            - name: KAFKA_CFG_ADVERTISED_LISTENERS
              value: 'PLAINTEXT://kafka-svc:9092'
            - name: KAFKA_CFG_BROKER_ID
              value: '1'
            - name: KAFKA_CFG_CONTROLLER_QUORUM_VOTERS
              value: '1@kafka-svc:9093'
            - name: ALLOW_PLAINTEXT_LISTENER
              value: 'yes'
            - name: KAFKA_KRAFT_CLUSTER_ID
              value: 'r4zt_wrqTRuT7W2NJsB_GA'
          volumeMounts:
            - name: data
              mountPath: /bitnami/kafka
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
          - "ReadWriteOnce"
        resources:
          requests:
            storage: "1Gi"

---
apiVersion: batch/v1
kind: Job
metadata:
  name: kafka-init
spec:
  template:
    spec:
      containers:
        - name: kafka-client
          image: docker.io/bitnami/kafka:3.6
          command: ["/bin/sh"]
          args:
            - -c
            - >-
              /opt/bitnami/kafka/bin/kafka-topics.sh --bootstrap-server=BROKER://kafka-svc.cqrs.svc.cluster.local:9092 --topic event-store --partitions=3 --create
              exit 0;
      restartPolicy: OnFailure